# Default to 2 spaces for indentation
set-option global indentwidth 2

# Never show changelog on startup
set-option global startup_info_version 99991231

# Show line numbers
add-highlighter global/number-lines number-lines -hlcursor

# Highlight matching delimiters
add-highlighter global/show-matching show-matching

# Highlight search matches
add-highlighter global/search-matches dynregex "%%reg{/}" 0:black,bright-white+f

# Highlight TODO/FIXME/NOTE
add-highlighter global/todo regex "\b(TODO|FIXME|NOTE)\b" 0:+r

# Use ripgrep
set-option global grepcmd "rg --column"

# Use `en-US` for `:spell` command
set-option global spell_lang "en-US"

# Highlight autowrap column (usually 80 characters)
hook global WinSetOption autowrap_column=.* %{
  add-highlighter -override window/wrap-column column %sh{ echo $((kak_opt_autowrap_column + 1)) } "default,%opt{column_color}"
  add-highlighter -override window/wrap-regex regex "^[^\n]{%opt{autowrap_column}}([^\n]*)$" "1:default,%opt{column_color}"
}

# Toggle soft wrapping
define-command -docstring "softwrap-enable: enable soft wrapping" \
softwrap-enable %{
  add-highlighter window/softwrap wrap
}
define-command -docstring "softwrap-disable: disable soft wrapping" \
softwrap-disable %{
  remove-highlighter window/softwrap
}

# Evaluate commands
define-command -docstring "evaluate-buffer: evaluate buffer commands as if entered by user" \
evaluate-buffer %{
  execute-keys -draft "%: <c-r>.<ret>"
}
define-command -docstring "evaluate-selection: evaluate selection commands as if entered by user" \
evaluate-selection %{
  execute-keys -itersel -draft ": <c-r>.<ret>"
}
