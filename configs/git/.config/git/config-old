[alias]
  # ADD
  a = add
  aa = add --all
  ap = add --patch
  ae = add --edit
  ai = add --intent-to-add

  # BRANCH
  b = branch
  bd = branch --delete
  bdf = branch --delete --force
  bm = branch --move
  master-to-main = branch --move --force main

  # CHECKOUT
  co = checkout

  # CHERRY-PICK
  ch = cherry-pick
  chc = cherry-pick --continue
  chs = cherry-pick --skip
  cha = cherry-pick --abort

  # CLEAN
  clean-ignored = clean -Xdf
  clean-untracked = clean -xdi
  cli = clean-ignored
  clu = clean-untracked

  # COMMIT
  c = commit
  cf = "!if [ -z \"$1\" ]; then git commit --fixup \"$(git lookup)\"; else git commit --fixup $@; fi #"
  reword = with-stash "git commit --amend --quiet"
  amend = commit --amend --no-edit

  # DIFF
  d = diff
  dd = diff --no-ext-diff
  ds = diff --staged
  dds = diff --staged --no-ext-diff
  da = diff HEAD
  du = diff @{upstream}..

  # FETCH
  f = fetch

  # LOOKUP
  k = lookup

  # LOG
  l = lll --max-count=20 --first-parent
  lu = lll @{upstream}..
  ll = lll --max-count=50
  lll = log --graph --pretty=normal
  signed = log --graph --max-count=10 --pretty=signed

  # MERGE
  m = merge
  ms = merge --squash
  mc = merge --continue
  ma = merge --abort
  mmain = "!git fetch && git merge origin/main -m 'Merge `origin/main`' #"

  # PULL
  pullff = pull --ff-only
  pullrb = pull --rebase

  # PUSH
  p = "!bash $HOME/.config/git/hooks/pre-push && git push $@ #"
  pu = "!git p -u origin \"$(git branch --show-current)\" #"
  pf = p --force-with-lease

  # REBASE
  rb = rebase
  rbu = rebase @{upstream}
  rbi = "!if [ -z \"$1\" ]; then git rebase-back \"$(git lookup)\"; else git rebase-back $@; fi #"
  rbauto = "!GIT_SEQUENCE_EDITOR=true git rbi $@ #"
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort
  rbmain = "!git fetch && git rb origin/main #"

  # RESET
  r = reset --mixed
  rs = reset --soft
  rh = reset --hard

  # RESTORE
  re = restore
  rep = restore --patch
  res = restore --staged
  resp = restore --staged --patch

  # REVERT
  rv = revert
  rvc = revert --continue
  rva = revert --abort

  # SHOW
  sh = "!if [ -z \"$1\" ]; then git lookup | xargs git show; else git show $@; fi #"
  shf = "!if [ -z \"$1\" ]; then GIT_LOOKUP_SHOW_OPTIONS="--name-status" git lookup | xargs git show --name-status; else git show --name-status $@; fi #"
  shh = sh HEAD
  shfh = shf HEAD

  # SPARSE-CHECKOUT
  sc = sparse-checkout

  # STASH
  st = stash push --include-untracked
  stp = stash pop --index
  sta = stash apply
  sts = stash show
  stl = stash list
  std = stash drop

  # STATUS
  s = status --short
  ss = status

  # SWITCH
  sw = switch
  swc = switch --create
  swd = switch --detach
  empty = switch --orphan

  # WORKTREE
  wt = worktree

  # MISCELLANEOUS
  # Print the path for the root of the git repo
  root = rev-parse --show-toplevel
  # Print name of upstream branch
  upstream = rev-parse --abbrev-ref @{upstream}
  # Run a command from the root of the git repo
  exec = "!exec "
  git = "!exec git"
  # `grep` through previous versions of a repository
  grep-through-time = "!git rev-list --all | xargs git grep \"$@\" #"

[color]
  ui = true
[commit]
  gpgSign = true
  template = ~/.config/git/template
[core]
  excludesfile = ~/.config/git/ignore
  pager = delta
[delta]
  tabs = 8
  syntax-theme = ansi
[diff]
  renames = copies
  algorithm = patience
[diff "nodiff"]
  command = true
[feature]
  manyFiles = true
[fetch]
  prune = true
  pruneTags = true
[init]
  defaultBranch = main
[interactive]
  singleKey = true
  diffFilter = delta --color-only
[merge]
  autoStash = true
  conflictStyle = diff3
[pull]
  ff = only
[pretty]
  normal = format:%C(red)%h %C(reset)%s %C(green)%ch %C(blue)%an %C(yellow)%D %C(reset)
  signed = format:%C(red)%h %C(reset)%s %C(green)%ch %C(blue)%an %C(magenta)%G? %C(yellow)%D %C(reset)
[push]
  followTags = true
  gpgSign = if-asked
[rebase]
  autoSquash = true
  autoStash = true
  missingCommitsCheck = error
[rerere]
  enabled = true
  autoUpdate = true
[sendemail]
  # https://git-send-email.io/
  smtpserver = smtp.fastmail.com
  smtpuser = evan@evanrelf.com
  smtpencryption = tls
  smtpserverport = 587
  suppresscc = self
  annotate = true
[stash]
  showPatch = true
[status]
  showUntrackedFiles = all
[tag]
  gpgSign = true
[url "git@github.com:"]
  insteadOf = https://github.com/
[url "git@git.sr.ht:"]
  insteadOf = https://git.sr.ht/
[user]
  name = Evan Relf
  useConfigOnly = true
[include]
  path = ~/.config/git/local
