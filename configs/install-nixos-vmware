#!/usr/bin/env bash

set -Eeuo pipefail
IFS=$'\n\t'

DISK=/dev/disk/by-id/nvme-VMware_Virtual_NVMe_Disk_VMware_NVME_0000

if [ ! -e "$DISK" ]; then
  echo "This script must be run from inside the virtual machine"
  exit 1
fi

echo "Clearing disk"
wipefs -af $DISK
sgdisk -Zo $DISK

echo "Creating partition table"
parted $DISK -- mklabel gpt

echo "Creating boot partition"
parted $DISK -- mkpart ESP fat32 1MiB 512MiB
parted $DISK -- set 1 boot on

echo "Creating root partition"
parted $DISK -- mkpart primary 512MiB 100%

echo "Formatting root volume as ZFS"
timeout 5s bash -c "while [ ! -e $DISK-part2 ]; do sleep 0.1; done"
zpool create \
  -f \
  -R /mnt \
  -O mountpoint=none \
  -O compression=zstd \
  -O atime=off \
  -O xattr=sa \
  -O acltype=posixacl \
  tank \
  $DISK-part2

echo "Creating root ZFS dataset"
zfs create -p -o mountpoint=legacy tank/local/root

echo "Creating blank snapshot of root ZFS dataset"
zfs snapshot tank/local/root@blank

echo "Mounting root ZFS dataset"
mount -t zfs tank/local/root /mnt

echo "Formatting boot partition as FAT32"
mkfs.vfat -F32 $DISK-part1

echo "Mounting boot partition"
mkdir /mnt/boot
mount $DISK-part1 /mnt/boot

echo "Creating and mounting dataset for '/nix'"
zfs create -p -o mountpoint=legacy tank/local/nix
mkdir /mnt/nix
mount -t zfs tank/local/nix /mnt/nix

echo "Creating and mounting dataset for '/home'"
zfs create -p -o mountpoint=legacy tank/safe/home
mkdir /mnt/home
mount -t zfs tank/safe/home /mnt/home

echo "Creating and mounting dataset for persisted state"
zfs create -p -o mountpoint=legacy tank/safe/persist
mkdir /mnt/persist
mount -t zfs tank/safe/persist /mnt/persist

echo "Generating initial NixOS configuration"
nixos-generate-config --root /mnt
mv /mnt/etc/nixos/configuration.nix{,.original}

echo "Writing VM-specific NixOS configuration"
cat <<EOF > /mnt/etc/nixos/configuration.nix
{
  imports = [ ./hardware-configuration.nix ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  boot.supportedFilesystems = [ "zfs" ];
  networking.hostId = "$(head -c8 /etc/machine-id)";

  # Doesn't work on 'aarch64-linux'
  # virtualisation.vmware.guest.enable = true;

  networking.useDHCP = false;
  $(grep --only-matching --extended-regexp 'networking\.interfaces\.\w+\.useDHCP.*;' /mnt/etc/nixos/configuration.nix.original)

  services.openssh.enable = true;

  nix.trustedUsers = [ "root" "@wheel" ];

  users.mutableUsers = false;
  users.users.evan = {
    isNormalUser = true;
    extraGroups = [ "wheel" ];
    initialPassword = "banana";
  };

  security.sudo.wheelNeedsPassword = false;

  time.timeZone = "America/Los_Angeles";

  $(grep --only-matching --extended-regexp 'system.stateVersion.*;' /mnt/etc/nixos/configuration.nix.original)
}
EOF

echo "Installing NixOS"
nixos-install

echo "Rebooting"
reboot
