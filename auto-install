#!/usr/bin/env bash

log() {
  echo "$*" >&2
}

error() {
  log "ERROR: $*"
  exit 1
}

exists() {
  command -v "$1" >/dev/null 2>&1
}

# Install config
install() {
  name="$1"
  prompt="$(read -rp "Install $name? [yN] ")"
  [ "$prompt" = "y" ] || return
  log "Installing $name..."
  stow --target "$HOME" -S "$name"
}

# Install config and create directory
install_dir() {
  mkdir -p "$HOME/${2:-".config/$name"}"
  install "$1"
}

# Check for dependencies
exists git || error "git is not installed"
exists stow || error "stow is not installed"

# Download git repo
if [ ! -d "$HOME/dotfiles" ]; then
  git clone https://github.com/evanrelf/dotfiles.git "$HOME/dotfiles" || error "Failed to clone git repo"
else
  # error "Directory '$HOME/dotfiles' already exists"
  true
fi
cd "$HOME/dotfiles" || error "Could not change to dotfiles directory"

# Install configs
if [ "$(uname)" = "Linux" ]; then
  exists bspwm && install_dir bspwm
  exists compton && install_dir compton
  exists kitty && install_dir kitty
  exists polybar && install_dir polybar
  exists redshift && install_dir redshift
  exists sxhkd && install_dir sxhkd
  exists xmonad && install xmonad
  # (exists startx || exists xorg-server) && install xorg
  exists zathura && install_dir zathura
elif [ "$(uname)" = "Darwin" ]; then
  [ -d "/Applications/BitBar.app" ] && install bitbar
  [ -d "/Applications/Hammerspoon.app" ] && install_dir hammerspoon ".hammerspoon"
  [ -d "/Applications/Karabiner-Elements.app" ] && install_dir karabiner
  [ -d "/Applications/kitty.app" ] && install_dir kitty
fi
exists alacritty && install_dir alacritty
exists clang-format && install clang-format
# exists emacs && install emacs
exists fish && install_dir fish ".config/fish/functions"
exists git && install git
exists kak && install_dir kakoune ".config/kak"
(exists nvim && install_dir neovim ".config/nvim") || (exists vim && install vim)
# exists spacemacs && install spacemacs
exists tmux && install tmux
install wallpapers
