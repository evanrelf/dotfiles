[alias]
  # ADD
  a = add
  aa = add --all
  ap = add --patch
  ae = add --edit
  ai = add --intent-to-add

  # BRANCH
  b = branch
  master-to-main = branch --move --force main

  # CLEAN
  clean-ignored = clean -Xdf
  clean-untracked = clean -xdi
  cli = clean-ignored
  clu = clean-untracked

  # COMMIT
  c = commit
  cf = "!if [ -z \"$1\" ]; then git commit --fixup \"$(git lookup)\"; else git commit --fixup $@; fi #"
  reword = with-stash "git commit --amend --quiet"
  amend = commit --amend --no-edit

  # DIFF
  d = diff
  ds = diff --staged

  # LOOKUP
  k = lookup

  # LOG
  l = lll --max-count=20
  ll = lll --max-count=50
  lll = log --graph --pretty=format:'%Cred%h%Creset %s%C(yellow)%d%Creset %Cgreen(%cr)%Creset %Cblue<%an>%Creset'
  signed = log --graph --max-count=10 --pretty=format:'%Cred%h%Creset %s%C(yellow)%d%Creset %Cgreen(%cr)%Creset %Cblue<%an>%Creset %C(magenta)%GS%Creset'

  # MERGE
  m = merge
  ms = merge --squash
  mc = merge --continue
  ma = merge --abort

  # PULL
  pullff = pull --ff-only
  pullrb = pull --rebase

  # PUSH
  p = "!bash $HOME/.config/git/hooks/pre-push && git push $@ #"
  pf = p --force-with-lease

  # REBASE
  rb = rebase
  rbi = "!if [ -z \"$1\" ]; then git rebase-back \"$(git lookup)\"; else git rebase-back $@; fi #"
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort

  # RESET
  undo-commit = reset --soft HEAD~1

  # RESTORE
  re = restore
  rep = restore --patch
  res = restore --staged
  resp = restore --staged --patch

  # SHOW
  sh = "!if [ -z \"$1\" ]; then git lookup | xargs git show; else git show $@; fi #"" ]"

  # STASH
  st = stash push --include-untracked
  stp = stash pop --index
  sta = stash apply
  sts = stash show
  stl = stash list
  std = stash drop

  # STATUS
  s = status --short
  ss = status

  # SWITCH
  sw = switch
  swc = switch --create
  swd = switch --detach
  empty = switch --orphan

  # WORKTREE
  wt = worktree

  # MISCELLANEOUS
  # Print the path for the root of the git repo
  root = rev-parse --show-toplevel
  # Print name of upstream branch
  upstream = rev-parse --abbrev-ref @{upstream}
  # Run a command from the root of the git repo
  exec = "!exec "

  # DEPRECATED
  co = "!echo \"Prefer using 'switch' and 'restore'\" >&2; exit 1 #"
  r = "!echo \"Prefer using 'restore' and 'reset'-related aliases\" >&2; exit 1 #"
  shd = "!echo \"'shd' deprecated\" >&2; exit 1 #"

[user]
  name = Evan Relf
  useConfigOnly = true
[core]
  excludesfile = ~/.config/git/ignore
  pager = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  line-numbers = true
  tabs = 8
  syntax-theme = GitHub
[stash]
  showPatch = true
  showStat = true
[commit]
  template = ~/.config/git/template
  gpgSign = true
[rebase]
  autoSquash = true
  autoStash = true
[push]
  followTags = true
[diff]
  renames = copies
  algorithm = patience
[diff "nodiff"]
  command = true
[color]
  ui = true
[fetch]
  prune = true
  pruneTags = true
[interactive]
  singleKey = true
[sendemail]
  # https://git-send-email.io/
  smtpserver = smtp.fastmail.com
  smtpuser = evan@evanrelf.com
  smtpencryption = tls
  smtpserverport = 587
[include]
  path = ~/.config/git/local
