#!/usr/bin/env bash

log() {
  echo -e "$*" >&2
}

error() {
  log "ERROR: $*"
  exit 1
}

command -v stow >/dev/null 2>&1 || error "stow is not installed"

if [ $# -gt 0 ]; then
  for i in "$@"; do
    log "Installing '$i'..."
    if [ -f "$i/install" ]; then
      bash "$i/install"
    elif [ -f "$i/stow-ignore" ]; then
      log "Cannot auto-install package '$i'"
      exit 1
    else
      case $i in
        fish )
          if [ ! -f "$HOME/.config/fish/conf.d/iterm.fish" ] && [ "$(uname)" == "Darwin" ]; then
            log "Installing iTerm Shell Integration for Fish..."
            command -v curl >/dev/null 2>&1 || error "curl is not installed"
            curl -Lo "$HOME/.config/fish/conf.d/iterm.fish" --create-dirs \
              "https://iterm2.com/shell_integration/fish"
          fi
          ;;
        kakoune )
          if [ ! -f "$HOME/.config/kak/plugins/plug.kak" ]; then
            command -v git >/dev/null 2>&1 || error "git is not installed"
            log "Installing plug.kak..."
            git clone --depth 1 "https://github.com/andreyorst/plug.kak.git" \
              "$HOME/.config/kak/plugins/plug.kak"
          else
            log "plug.kak already installed"
          fi
          ;;
        neovim )
          if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
            log "Installing vim-plug..."
            command -v curl >/dev/null 2>&1 || error "curl is not installed"
            curl -fLo "$HOME/.local/share/nvim/site/autoload/plug.vim" --create-dirs \
              "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
          else
            log "vim-plug already installed"
          fi
          ;;
      esac
      stow --no-folding --target "$HOME" -S "$i"
    fi
  done
else
  error "No packages specified\\nUsage: ./install [PACKAGES]"
fi
