#!/usr/bin/env nix-shell
#!nix-shell --pure --keep PRETTY_PLEASE --packages curl git stow -i bash
# shellcheck shell=bash

set -euo pipefail

log() { echo "$*" >&2; }
warn() { log "WARN: $*"; }
error() { log "ERROR: $*"; }

case "$USER" in
  evanrelf|evan )
    true
    ;;
  * )
    if [ -z "${PRETTY_PLEASE:-}" ]; then
      log "
I really don't recommend you install these configs on your machine verbatim!

They have been tailored for my personal use only, with zero consideration for
other people using them.

Instead, I recommend you pick through the code and steal whichever bits tickle
your fancy.

If you insist on using things verbatim, you can set the PRETTY_PLEASE
environment variable to a non-zero value, and I'll get out of your way.
"
      exit 1
    fi
    ;;
esac

if [ ! "$#" -gt 0 ]; then
  error "No packages specified"
  echo
  log "Usage: ./install [PACKAGE]"
  exit 1
fi

for i in "$@"; do
  # shellcheck disable=SC2001
  package=$(echo "$i" | sed 's|/||g')

  if [ ! -d "$package" ]; then
    warn "[$package] Config doesn't exist"
    continue
  fi

  if [ -f "$package/stow-ignore" ]; then
    warn "[$package] Config must be installed manually"
    continue
  fi

  case "$package" in
    kakoune )
      if [ ! -e "$HOME/.config/kak/plugins/plug.kak/" ]; then
        log "[kakoune] Installing plug.kak"
        git clone \
          --depth 1 \
          "https://github.com/andreyorst/plug.kak.git" \
          "$HOME/.config/kak/plugins/plug.kak"
      else
        log "[kakoune] plug.kak already installed"
      fi
      ;;
    tmux )
      if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
        log "[tmux] Installing Tmux Plugin Manager"
        git clone \
          --depth 1 \
          "https://github.com/tmux-plugins/tpm" \
          "$HOME/.tmux/plugins/tpm"
      else
        log "[tmux] Tmux Plugin Manager already installed"
      fi
      ;;
    neovim )
      if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
        log "[neovim] Installing vim-plug..."
        curl \
          --location \
          --fail \
          --create-dirs \
          "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" \
          --output "$HOME/.local/share/nvim/site/autoload/plug.vim"
      else
        log "[neovim] vim-plug already installed"
      fi
      ;;
  esac

  if [ -f "$package/install" ]; then
    log "[$package] Running custom install script"
    sh "$package/install"
  else
    log "[$package] Installing config"
    stow \
      --verbose=2 \
      --target "$HOME" \
      --no-folding \
      --ignore "install" \
      --stow "$package"
  fi
done
