(provide 'init-leader)

(general-def
  :prefix "SPC"
  :non-normal-prefix "M-SPC"
  :states '(normal visual insert emacs)
  :keymaps 'override
  "" '(nil :which-key "leader")
  "ESC" '(evil-escape :which-key t)
  "C-g" '(evil-escape :which-key t)
  "SPC" '(counsel-M-x :which-key "M-x")

  "w" '(:ignore t :which-key "window")
  "w C-g" '(evil-escape :which-key t)
  "w ESC" '(evil-escape :which-key t)
  "w -" '(evil-window-split :which-key "split")
  "w \\" '(evil-window-vsplit :which-key "vsplit")
  "w n" '(evil-window-next :which-key "next")
  "w p" '(evil-window-prev :which-key "previous")
  "w h" '(evil-window-left :which-key "left")
  "w j" '(evil-window-down :which-key "down")
  "w k" '(evil-window-up :which-key "up")
  "w l" '(evil-window-right :which-key "right")
  "w d" '(evil-window-delete :which-key "delete")

  "b" '(:ignore t :which-key "buffer")
  "b C-g" '(evil-escape :which-key t)
  "b ESC" '(evil-escape :which-key t)
  "b c" '(evil-buffer-new :which-key "create")
  "b l" '(ibuffer :which-key "list")
  "b s" '(counsel-ibuffer :which-key "switch")
  "b n" '(next-buffer :which-key "next")
  "b p" '(previous-buffer :which-key "previous")
  "b d" '(evil-delete-buffer :which-key "delete")

  "f" '(:ignore t :which-key "file")
  "f C-g" '(evil-escape :which-key t)
  "f ESC" '(evil-escape :which-key t)
  "f s" '(save-buffer :which-key "save")
  "f f" '(counsel-find-file :which-key "find")

  "t" '(:ignore t :which-key "terminal")
  "t C-g" '(evil-escape :which-key t)
  "t ESC" '(evil-escape :which-key t)
  "t c" '(multi-vterm :which-key "create")
  "t t" '(multi-vterm-dedicated-toggle :which-key "toggle")
  "t n" '(multi-vterm-next :which-key "next")
  "t p" '(multi-vterm-prev :which-key "previous")

  "p" '(:ignore t :which-key "project")
  "p C-g" '(evil-escape :which-key t)
  "p ESC" '(evil-escape :which-key t)
  "p s" '(counsel-projectile-switch-project :which-key "switch")
  "p f" '(counsel-projectile-find-file :which-key "find file")
  "p d" '(projectile-dired :which-key "dired")
  "p t" '(multi-vterm-projectile :which-key "terminal")

  "p b" '(:ignore t :which-key "buffer")
  "p b C-g" '(evil-escape :which-key t)
  "p b ESC" '(evil-escape :which-key t)
  "p b l" '(projectile-ibuffer :which-key "list")
  "p b s" '(counsel-projectile-switch-buffer :which-key "switch")
  "p b n" '(projectile-next-project-buffer :which-key "next")
  "p b p" '(projectile-previous-project-buffer :which-key "previous")

  "g" '(:ignore t :which-key "git")
  "g C-g" '(evil-escape :which-key t)
  "g ESC" '(evil-escape :which-key t)
  "g s" '(magit-status :which-key "status")

  "h" '(:ignore t :which-key "help")
  "h C-g" '(evil-escape :which-key t)
  "h ESC" '(evil-escape :which-key t)
  "h v" '(describe-variable :which-key "variable")
  "h f" '(describe-function :which-key "function")
  "h k" '(describe-key :which-key "key")
  "h m" '(describe-mode :which-key "mode")
  "h p" '(describe-package :which-key "package")

  "q" '(:ignore t :which-key "help")
  "q C-g" '(evil-escape :which-key t)
  "q q" '(evil-quit :which-key "quit")
  "q k" '(save-buffers-kill-emacs :which-key "kill")

  "," '((lambda () (interactive) (evil-edit "~/.emacs.d/init.el")) :which-key "edit config"))
